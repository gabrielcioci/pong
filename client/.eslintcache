[{"/Users/gabriel/Desktop/pong/client/src/App.js":"1","/Users/gabriel/Desktop/pong/client/src/index.js":"2","/Users/gabriel/Desktop/pong/client/src/components/PongRoom.js":"3","/Users/gabriel/Desktop/pong/client/src/components/Welcome.js":"4"},{"size":745,"mtime":1607467888045,"results":"5","hashOfConfig":"6"},{"size":167,"mtime":1606333141453,"results":"7","hashOfConfig":"6"},{"size":5133,"mtime":1607701108070,"results":"8","hashOfConfig":"6"},{"size":3433,"mtime":1607685180697,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tuobau",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/gabriel/Desktop/pong/client/src/App.js",[],"/Users/gabriel/Desktop/pong/client/src/index.js",[],["20","21"],"/Users/gabriel/Desktop/pong/client/src/components/PongRoom.js",["22"],"/Users/gabriel/Desktop/pong/client/src/components/Welcome.js",["23"],"import React, {useEffect, useState} from 'react';\n\nconst Welcome = (props) => {\n    const [username, setUsername] = useState('')\n    const [rooms, setRooms] = useState()\n    const [showRooms, setShowRooms] = useState(true)\n    const [room, setRoom] = useState('')\n    const {socket} = props\n\n    const handleCreateRoom = () => {\n        if (username.length && room.length) {\n            socket.emit('createRoom', {username, room}, (error) => {\n                if (error) {\n                    alert(error);\n                }\n            })\n            props.history.push(`/rooms?room=${room}&username=${username}`)\n        } else alert('Username and room name is required for creating a new room.')\n    }\n    const handleJoinRoom = (room) => {\n        if (username.length) {\n            socket.emit('join', {username, room}, (error) => {\n                if (error) {\n                    alert(error);\n                }\n            })\n            props.history.push(`/rooms?room=${room}&username=${username}`)\n        } else alert('Username is required.')\n\n    }\n    useEffect(() => {\n        socket.emit('getRooms')\n        socket.on('availableRooms', ({gameRooms}) => {\n            setRooms(gameRooms)\n        })\n        return () => {\n            socket.off('availableRooms')\n        }\n    }, [])\n\n    return (\n        <div className=\"welcome-screen\">\n            <div className=\"title\">\n                <div className=\"jumping-ball\"/>\n                <h1>Pong</h1>\n            </div>\n            <div className=\"welcome-content\">\n                <h2>Username</h2>\n                <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)}\n                       placeholder=\"Your Name\"\n                       name=\"username\"/>\n                {showRooms ? <div className=\"rooms-available\">\n                        <h2>Available rooms\n                            <div className=\"btn btn-turquoise btn-small\" onClick={(e) => setShowRooms(false)}>New room</div>\n                        </h2>\n                        {rooms && rooms.length ? rooms.map((room) => (\n                                <div key={room.name} className=\"room\">\n                                    <h4>{room.name}</h4>\n                                    <div className=\"players\">{room.players.length}/2</div>\n                                    <div className=\"btn btn-green\"\n                                         onClick={(e) => handleJoinRoom(room.name)}>Join\n                                    </div>\n                                </div>\n                            )) :\n                            <p>No rooms available at this moment.<br/>Create one!</p>\n                        }\n                    </div> :\n                    <div className=\"create\">\n                        <h2>Create your room <div className=\"btn btn-turquoise btn-small\"\n                                                  onClick={(e) => setShowRooms(true)}>Rooms</div></h2>\n                        <input type=\"text\" value={room} onChange={(e) => setRoom(e.target.value)}\n                               placeholder=\"Room Name\"\n                               name=\"room\"/>\n                        <div onClick={(e) => handleCreateRoom(username, room)}\n                             className=\"btn btn-full\">Create\n                        </div>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\nexport default Welcome",{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":118,"column":8,"nodeType":"30","endLine":118,"endColumn":10,"suggestions":"31"},{"ruleId":"28","severity":1,"message":"32","line":39,"column":8,"nodeType":"30","endLine":39,"endColumn":10,"suggestions":"33"},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'funSounds', 'movePaddle', 'props.history', and 'socket'. Either include them or remove the dependency array.","ArrayExpression",["36"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["37"],"no-global-assign","no-unsafe-negation",{"desc":"38","fix":"39"},{"desc":"40","fix":"41"},"Update the dependencies array to be: [funSounds, movePaddle, props.history, socket]",{"range":"42","text":"43"},"Update the dependencies array to be: [socket]",{"range":"44","text":"45"},[3702,3704],"[funSounds, movePaddle, props.history, socket]",[1295,1297],"[socket]"]